# Example compose file for local development and testing
# DO NOT USE IN PRODUCTION!
# DO NOT USE DEFAULT CREDENTIALS IN PRODUCTION!
# Visit the documentation for more information about deployment (https://github.com/uol-esis/TH1/wiki/Deployment)
name: th1
services:

  backend:
    build: ..
    environment:
      APP_SECURITY_ENABLED: true
      SPRING_DATASOURCE_USERNAME: example
      SPRING_DATASOURCE_PASSWORD: example
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/example
      SPRINGDOC_SWAGGER-UI_OAUTH_CLIENT-ID: th1
      TH1_MB_API_KEY: key
      TH1_MB_API_GENERAL_KEY: ${MB_GENERATED_KEY}
      TH1_MB_BASEPATH: http://localhost:3000/api
      TH1_SECURITY_ALLOWEDORIGINS: http://localhost:5173,http://locahost:8080,http://localhost
      TH1_SECURITY_AUTHORIZATIONURL: http://localhost:8085/realms/th1/protocol/openid-connect/auth
      TH1_SECURITY_TOKENURL: http://localhost:8085/realms/th1/protocol/openid-connect/token
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://localhost:8085/realms/th1
      LOGGING_LEVEL_DE_UOL_PGDOENER_TH1: DEBUG
    network_mode: host # host mode for token verification with keycloak
    depends_on:
      db:
        condition: service_healthy

  # WIP
  frontend:
    build:
      context: https://github.com/uol-esis/Frontend.git
      args:
        OAUTH_URL: http://localhost:8085
        OAUTH_REALM: th1
        OAUTH_CLIENT_ID: th1
    environment:
      API_HOST: http://127.0.0.1:8080/api/v1/
      METABASE_HOST: http://localhost:3000
    network_mode: host

  db:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: example
      PGUSER: example
    # Add a volume to the db if you want to reuse uploaded data
    # volumes:
    #   - db-data:/var/lib/postgresql/data
    healthcheck:
      start_period: 5s
      test: [ "CMD-SHELL", "pg_isready" ]

  keycloak:
    image: quay.io/keycloak/keycloak:26.2
    ports:
      - "8085:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=http://localhost:8085/
    command: [ "start-dev" , "--import-realm" ]
    volumes:
      - "./data/realms:/opt/keycloak/data/import"

  metabase:
    image: metabase/metabase
    container_name: metabase
    environment:
      MB_API_KEY: key
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  garage:
    image: dxflrs/garage:v2.0.0
    container_name: garaged
    ports:
      - "3900:3900"
      - "3901:3901"
      - "3902:3902"
      - "3903:3903"
    volumes:
      - ./objectstorage/garage.toml:/etc/garage.toml
      - ./objectstorage/meta:/var/lib/garage/meta
      - ./objectstorage/data:/var/lib/garage/data

  garage_config:
    image: docker:cli
    container_name: garage_config
    depends_on:
      garage:
        condition: service_started
    volumes:
      - ./objectstorage/scripts:/scripts
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      echo 'Waiting for Garage service...';
      until nc -z garage 3900; do
        echo 'Garage not available yet. Sleeping...';
        sleep 2;
      done;
      echo 'Garage is available. Running initialization...';
      /scripts/configure.sh;
      "
