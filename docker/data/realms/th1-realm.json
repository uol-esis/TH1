{
  "id": "60d2410e-81f1-4a66-b989-a361f1f1c16b",
  "realm": "th1",
  "displayName": "TH1 Realm",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "a5ddd2a8-bd4f-4357-8f4e-e01948869dfb",
        "name": "default-roles-th1",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "60d2410e-81f1-4a66-b989-a361f1f1c16b",
        "attributes": {}
      },
      {
        "id": "c4be202f-9e48-4719-a3f4-100f91284c3b",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "60d2410e-81f1-4a66-b989-a361f1f1c16b",
        "attributes": {}
      },
      {
        "id": "c2a26c3d-2df4-4baf-a427-c7acec4caccb",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "60d2410e-81f1-4a66-b989-a361f1f1c16b",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "a8624738-2e02-4a3b-8aa5-da307f456b6c",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "ce3f21cb-eddd-482b-9b13-365b6223d6f9",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "f8596c24-6fd2-42f8-a009-4ed45fc1a7cd",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "6fc352ab-c0d7-487e-a8a2-8b3f01a5de6c",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "bbea5c41-e67c-4cb2-8496-a60ea02734f4",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "manage-realm",
                "query-clients",
                "query-users",
                "view-events",
                "view-identity-providers",
                "impersonation",
                "view-authorization",
                "manage-users",
                "manage-events",
                "manage-authorization",
                "view-realm",
                "view-users",
                "manage-clients",
                "query-groups",
                "manage-identity-providers",
                "query-realms",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "8f84e1a8-2e1f-4841-866e-e06efd8b3708",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "5c363bd6-e374-41ca-8171-edd3a08a815a",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "fb63e064-5c59-433d-a0ca-ee77669b6b50",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "2abf3e5f-d355-4130-a692-61ad0a66b2e4",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "2d316201-703c-4394-81f0-129b7fe1c562",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "900ded18-e901-4917-bd37-e9843a4090ea",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "8c7ca9e9-6191-46de-ad8d-d92b63cd31cc",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "f5ac535e-ca9d-4c66-adcf-700e3484ba8c",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "23e1094a-7375-446b-a4e3-41a32c3ecc32",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "27290b15-0109-463d-a9de-370cc0fbadfd",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "6619887a-8121-4dc7-bcaa-90d7f961ee62",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "58d0d037-9d60-48c9-a1d0-ef82bf8337c4",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "ce0c8b57-1dea-4441-98f3-8c471c0a97a7",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        },
        {
          "id": "6fd6760a-fb21-4e7f-8ff8-d60c5ec7c475",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "968cf5a5-b04a-4883-9cbd-5a2d3a75716a",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "96ac7656-05c3-4809-99ff-3e46413499a5",
          "attributes": {}
        }
      ],
      "th1": [
        {
          "id": "b839e351-a7ca-4faa-94a6-d4929678c247",
          "name": "read:converter",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "4f2a122c-c4bf-4be2-bfe6-973fc5359827",
          "name": "read:feedback",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "294a6f03-75b0-4c4b-ab26-9291ce1094a9",
          "name": "write:converter",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "54336832-3b43-436e-a68f-a9a1fc166c60",
          "name": "write:feedback",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "e23a938e-0121-443d-8b45-0c3f3f3d1c01",
          "name": "visitor",
          "description": "",
          "composite": true,
          "composites": {
            "client": {
              "th1": [
                "read:converter",
                "write:feedback",
                "read:tablestructure"
              ]
            }
          },
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "9108b60b-ec23-4894-98ab-f9fd4b9f688d",
          "name": "user",
          "description": "",
          "composite": true,
          "composites": {
            "client": {
              "th1": [
                "read:converter",
                "read:feedback",
                "write:converter",
                "write:feedback",
                "write:tablestructure",
                "read:tablestructure"
              ]
            }
          },
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "1a2cb81e-8cc5-47ae-a692-f02206f5ee60",
          "name": "write:tablestructure",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        },
        {
          "id": "e82704e9-b293-41ed-8abd-e82a44b43337",
          "name": "read:tablestructure",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "7f4e1f0d-b407-4982-9367-91dead4ef02f",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "fc2c336f-7847-4609-98ad-14cd8f1fa6d8",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "e2164993-fd43-4941-8a84-d80288c9efaa",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "51b17720-0caa-4148-ba07-88c4c2579c74",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "2c4000a1-1c83-479a-9a3b-937104187c68",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "35902f81-2d7f-4db7-a2da-3c4d239a8171",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "88898205-ac6f-47d7-a302-1e6d95777d35",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        },
        {
          "id": "a9137f1c-1cb0-47bf-b510-06ce062507a0",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "a5ddd2a8-bd4f-4357-8f4e-e01948869dfb",
    "name": "default-roles-th1",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "60d2410e-81f1-4a66-b989-a361f1f1c16b"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "40ddfebe-9b0d-4f52-8edf-2fc21ccfe165",
      "username": "u-user",
      "firstName": "Ursula",
      "lastName": "User",
      "email": "ursula.user@uni-oldenburg.de",
      "emailVerified": true,
      "createdTimestamp": 1749314524071,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "401a6604-60f3-4cd3-97c9-6022d91910e6",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1749314541920,
          "secretData": "{\"value\":\"pA2EKw/mMEvPNjBDs8VWY1cSvsfaW7LXgLfDON888a8=\",\"salt\":\"NNJA8OyYZYfE/HQ0nxhU3g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-th1"
      ],
      "clientRoles": {
        "th1": [
          "user"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a2c72c73-c7e2-44a5-bbb7-291a79f2adec",
      "username": "v-visitor",
      "firstName": "Victor",
      "lastName": "Visitor",
      "email": "victor.visitor@uni-oldenburg.de",
      "emailVerified": true,
      "createdTimestamp": 1749314135654,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "6ea07f95-2a40-4e6e-8b04-bc6bfe0473e4",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1749314356892,
          "secretData": "{\"value\":\"qx0mUvD1kx5X0++n4E8KGGaCX/RrTQjHDrFeRpWR4wQ=\",\"salt\":\"vWr9m+BlNF8aPAgkBgyXPg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-th1"
      ],
      "clientRoles": {
        "th1": [
          "visitor"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "ddf43a72-48ab-4723-b407-3af84bcc54f3",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/th1/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/th1/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f513c8af-aaec-4ee6-8e53-dcdc3b6e049b",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/th1/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/th1/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "07edc0d4-0f0a-44a5-94a3-05f6abdd64a9",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a5df3b47-2127-47f0-ae2c-b63c0d133b76",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "96ac7656-05c3-4809-99ff-3e46413499a5",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b2cc2e04-74bc-4c1a-b8bb-f0ec33713fbf",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "65dde6bd-7702-417d-b96b-1d94efbd7e03",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/th1/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/th1/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "18264db9-2a85-4da2-9af8-fe592a6767ac",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cc0ed98a-7294-4898-9e48-f34b9f47aa7b",
      "clientId": "th1",
      "name": "TH1",
      "description": "",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "http://localhost:8080",
      "baseUrl": "http://localhost:8080",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://localhost:5173/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "standard.token.exchange.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "fd662536-6e97-4a03-905d-7e709fa10a84",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "fc146b0b-1abd-439a-8b67-17dc878c1b06",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d92df5c0-ec62-45ff-8508-6f5960da4c88",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d29f4e36-9721-4f8e-a714-967d4393bc90",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e098a2d5-f85a-44a6-9f7a-794dadb5d0b9",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "a596d22e-09ae-4315-a0f5-f7bd7082bf64",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a68cbddc-21c2-4eb0-b6e7-6ee074c80b8e",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "1ab9a614-d496-4fb9-98b8-a1979d5eb9e1",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d023aae3-0bf9-4e64-940f-d04a4af4bd94",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "68e83d78-81c5-454e-b318-26474e12812c",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "b02fd331-f66d-4591-bfc6-32135ac788e7",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5d51c96f-a61b-4ab1-998d-75dde713f089",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f6f67f5a-aaeb-4cc8-b1b2-13d23f2a1dd7",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0e8087d8-d3bb-4fcd-914e-24e3c8b792b2",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "16b7e0f0-6c40-4a6b-97d2-ba7de275a78f",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "3627715c-083e-4984-9c20-83fa127f6dec",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "45e3e68c-a301-4b9f-8ca6-3392787370ba",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "3086b139-1e34-4336-8263-5eec1842fd06",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "993cca91-d4a0-48d9-99a7-159f79232ab1",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "31d24114-a2e0-4e8c-9964-35bb4ec30fb0",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "b957f86d-a996-4c8b-8a89-274061d4cb36",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5633e50f-09a1-4b99-b6f3-bfff96e74aa1",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c9424717-f3b7-4041-9c8f-64589e9988cc",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "b266672b-0a5d-4dd0-abdd-6a22cf3dbb55",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "64d711c8-bc3d-4d4a-95b4-d8c6259a2f35",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "e70e0754-cbfc-4083-9988-ce6a870600cb",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "9d92818b-426e-47e6-9cf1-d24b29b9f90f",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "876799db-f2ca-4730-bb8d-b3cbb4ff8ab0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1200764e-94e2-4279-934d-37b8465bd2f9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b6b1e974-a217-4091-9080-885d58f2add0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2e40c852-29be-4a16-8105-a81db06fa0c4",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "f16c64de-f8f9-47bf-9143-d66e57290885",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "5e9aa9f6-6ca7-4054-a87c-142efabf17dd",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "6633d751-73f2-46a0-8b11-a32d45584e2d",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cfc8066c-c527-4ec6-b3e0-4d8701617bcf",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "349ef3d6-fce7-4c2c-a8cd-b1fb76194d40",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "310e385c-2cc9-4592-917f-7c6cddedac55",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a2834fde-077a-498c-8e84-67599af402d3",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "8a742645-30fe-4b88-a1a1-864cea465bb6",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "be22dc71-bfaa-4c58-aa84-571eaa3c4f2f",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d2a928e4-9057-4244-8531-3cb42e9fa8ae",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78efc05f-639f-42e6-9450-0fa28f160cb3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "71b03f7d-80d2-4825-bec5-d0e80550f5f2",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a0e9be86-fa2f-4c73-a55b-47a677cb362a",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e8f20405-83f5-4387-be52-43e8058f8dca",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c4d3d8a-23db-402e-920c-4459293e5890",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "97c40402-6921-428d-b466-91105ae4b6d4",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aeb5cdff-561a-4ddd-a982-3f8ef292c096",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e7df99e6-924d-4027-b246-a75e65b646ea",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "6201ef5a-4486-4b2e-b6bf-db74dc1d46ed",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "917e3407-75d4-4e2c-b9ee-546a9a1fa381",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "bbb6d22e-1a88-4c26-a283-71e451cfce1a",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d181289c-6df8-499b-843f-7ef272fe4acc",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a9d58720-b523-4717-aa8b-da694f580071",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "333caa3a-9d29-4b06-853c-a7fb4570662f",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "fd3db45f-f93b-40b7-9d4b-f49ea2d6be4a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "0d418031-10d6-46f1-a46a-15ce2f35c2e5",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "dbfa2fef-6f13-42ed-b414-f29a240253af"
          ],
          "secret": [
            "bKJaUb7MqNDfeLROCDQWJw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "429b19d8-e86e-42ba-a01d-7c35900e3ace",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "b6f6dd3a-0b13-477b-a86c-8bdd1d597f22"
          ],
          "secret": [
            "08Rl7bvOdMIQ22k_qLFLU5ItDQvDXayO5VnYZiZoLS5SasMrWA75djnXbysa3zrKtKJXKlGO0pVBQAZx3z_A1KAAr1hXQNqOq3LJaRDwFXUBmo2Abvbmm0FK1AA1AJJnLnpnMOZdr5RXNCNXvSYuorzuce8vL3gF0YlvmZfVg2o"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "80bb1213-a2bb-4860-a5c8-c6a8376ef6db",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAuYYXr6XREwcCOZt0jpfV6vM3kjjZ83jzL3LN8/qq9gZRG+9ioo2K4z0LlR4zvErMMB6o1GOAPq5jsdkJBMH445XYngvVBchp+CKivaOJG+qyALDY/TkarMYlm2uWGZu30iBSTO4E5qZ11pxY2ohcHhkZsZm+BLWihhg8ns2VXNCfna7r7rN0ObZTIQDN9EP/gnipuG+tq1fuAYyuiSuI3o8AMA/+ikF30Z+JJlm/xdK+7Trk4yj/tqZ7Y6B0nh7TFlELsZ+HYtJNpxJRCY+PYuPh8g/MS1AdcSwuU3xyQ1sIDOrNcS/uLPfIJrDOKfa/JkRwlikxz2VZj8dQqwykbwIDAQABAoIBAEihxD0qfD9oQ4k9ILVAoWmx3aQ76KwmwoJlflcR4IOgNnnqzuFX67OKLzIqmFOTrvv5zNwVtlwT1wkGML8xl5i2Dg/WDwiMDVytZqw6zY9l41lc4x7ED/rrOkbuKF4PNjioGcBvgPCx47lpDWpE71eDOSlsSNW8LIw2CemcD+k9Q0+DCv3nAHc9K6chN2tjOpkcdomsoGy1dv0xgy3ly8ArnodhtRsPDKcTckOG3AlDb2LlZcCmdY8HOGNXDVMIPVHcRzIhUxu00Wm1zl0hH2q7Y12cgn0yucTXHkx1VcsMc4XObUtEs1Lox659m0tXCmI57eO3TLg2wLNJEFnnO0UCgYEA3RRuxdAbVDrdHCRPGK0zfVyQIVlO2c7tBbZKBS3G33nGpAGerQ1mXj/HLbpLJyfjmFX9O7q/EuGZdA635IC6DWbFRbyxe98f3hlyrhLbZjsqijrBbZogSjzcy5AptQXGFTnt+ucMmrTz2acEGICt7bb38Fr/WtNP8mR+gYRbx/sCgYEA1tPrWW4H571Movn91i16/9UW2OEf5g/QMqpU86VjI31iOjzWhCGdPydu4/7gQnWPZjl7zgEvTLoah3aZL0Gr6K5eHsh9TkoFtSBtOVyM1Wjju0CiSRBKgqohr+JNYjxyalaRSv36VQtO+OCxoC9es6OWl+Q6EGFyOvkUXFHDZx0CgYA5CWh6yHIEjRs2g3eUmjrKgPL+Z5gcQXKNIrZ+F41TYouJDJHve6GJd1LfzUxOUdA6IRUwL8HUETgR5So0XbGie30xvLjdiHckSdR4bI0GFwWmm/oDWNwzyvf73Lml5lNwbn2jWbC6ySyQXrKDz88PoUDeVdvDhvj9REgPCiLTuQKBgQC2XbwCdOd9EDOIfpO/R2iM2QXGIoYDtRTWjcYD9zgLnprOOWsZS7fDLuRx46HYiResfcvdex/+EFYI/OLZPPSEV9FKbIQC+8+QjPBrq2damuoHwbyCLbQy694hAwkSBaJTJx27/ZKOs0Tc/VGMW+oWsR5b3sBzu2VPLrbcEATC+QKBgQCKF/VEZI5Z/BuzH4/kSrnAnjk4eumqNRxdYD1zHAT9lBt8mlzj2Blg2UeZLbe/RBWfRODHeGC/gRBKyQo0BntzpH1qu2GRdn8MTEXuPKq7vXm48av5K8U10UosthQZhGikhrvsYL+eyQcJWiE+zdx2DI7I+LnCv7esmRyO832cuQ=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIIClTCCAX0CBgGXSzwZ9zANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDAN0aDEwHhcNMjUwNjA3MTYzMDE5WhcNMzUwNjA3MTYzMTU5WjAOMQwwCgYDVQQDDAN0aDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5hhevpdETBwI5m3SOl9Xq8zeSONnzePMvcs3z+qr2BlEb72KijYrjPQuVHjO8SswwHqjUY4A+rmOx2QkEwfjjldieC9UFyGn4IqK9o4kb6rIAsNj9ORqsxiWba5YZm7fSIFJM7gTmpnXWnFjaiFweGRmxmb4EtaKGGDyezZVc0J+druvus3Q5tlMhAM30Q/+CeKm4b62rV+4BjK6JK4jejwAwD/6KQXfRn4kmWb/F0r7tOuTjKP+2pntjoHSeHtMWUQuxn4di0k2nElEJj49i4+HyD8xLUB1xLC5TfHJDWwgM6s1xL+4s98gmsM4p9r8mRHCWKTHPZVmPx1CrDKRvAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHPoYKsGT15Sty5eDqp6f7C2kA+ZrDR6dnCAy2+IemBItViFrMWHMvqaIcmEjrYbiqt+vl+H9jVDVi1iHXn0rGsHxW7Me3lAM32atFRGvCiUJf7hsEbPtDi6j2uihqcVXSHJHo3ewPrI+gscH/BWckiblUT12GdUk4PxG78JUeQGcvPXjejGALW/0fmn+th2L9tp6gOjorgQmM73A4tnGob9JcpnfqXSBfwc16GhkALuR2ammky4YDIwkbMhK9c9NHVtEiDLatOaCeliBlYzJcTCrOMkGV36C4SzdNpNTiLMenUpTR1jiSB2TFFymwGm0yIs7soZZfiNXBkce7RcNNQ="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "b4664d90-e92a-41e2-9d44-14072bc09c82",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAvEj/CJUVZivsxnOvm5smEyLEVAlgqTWXn22144eEkfYBS/87QtIxmycNkIXAj4EqJKEohGHMLTvP9Q3kB3+7qBTYpT57IzzRfZnE5VlXejxWvnePlLz453En418XVm2IT7SqvzckqyYNINI23ercAMXKpvupFEAlkAsAFrbTqbJuezoTARzcoqBIRjDfZdgMNBynaFYTNubg2gp8bkLmDbt+LWwux0vWdem8BYFXrUI7A+2cp2F9xydXuHZRUF9UVsQnhqHMYEqfmFuJXHmtDyIKr53uNX1/mTL/elC9YmZOoXAOfNe79zoeoM9/Z3pfhDqzALSEwxBS9QdvnyO7FQIDAQABAoIBAFLVqIH9mNcE7xvV7IXAaa1Uh9xS7dgzsDufODzcM5pFiQeGx+sbb2CLe1/AQFnCISjRT/KB1iJ2ZISyskYMT6JgXXnBdcooaR/hZSrjteUco6sTDbOJudWUxlA1Vx6afLRYTyBl4bd8O51bbnEOcPDUE9aH9DhpCj2HYWgc0h0fFdaM246x8AHKVHMmnmeTyxkdG0FOWW0j/8uQhg/ow41yaDHydEaWOl7bTObBQHLdWF+WBmZsBfMP+TjfHFlgUciEMcXjnBs6S+gU9eo5qyUppUiUXIPx3dVRHGOSf9MltIfMMVCnQOLAh3WyXtK9COHYk8/FUI/0YLyB4npzHocCgYEA7P6lgDy2voEP4aY9OkVH8H4obkq176IAJ16z57tj1BQHQG8vg93AHf14Rtd8hC4k6BMcP9IUWB8/1LlpZKC7dWiWt3fGOQKBOcUX9liyLMN4IP7KRpwKQdzUL+RTyDisssHRFRRyCkzqM8DDkjb+lE+e+zfI7XO5wufUPkXLSAcCgYEAy2JfZZUHuYJhdeoV0uDWZ7b24QnCFdUywT7sbawYCZHW48QVF6/cF62HR5qh+LGLPgXO8XmOgpFrVpOhhzo06iQzf9pRa6TL3EZe7PgpGnBMv1K9lLqmOJ2TEfDERFoxy85aoxR10na6CS0/9yRCNXN7/ggHuIX70adzlRvoRQMCgYAIQXqsc/D9w+s0tiDN5dnys8JezTV3SpJszKzBttJsceIqyXTDSDdIFCtbdGg/Boh8mSXTx1K0GyqTE35rZfoBxgnyDDcYh1DPHWGPUFmsm4aUx6tuOENXNgUiQfb1M5w4ge3xqQur9i/2a5Gkh0vpCLkGEVRriSuAcakAHlhNgwKBgE7YyUD5YLBDYoMzB9jj/1rf7J/bh5mtOGsAeOofoIX9OwC74K15KOspA9v3j7l5IxEdcVfeFyh5NdKvkxx4rVDkTe7P9Wa00a+IvH5DyrOMO8SkUAjbv1sNg5md7IjPKqTnT+4PHYpFKuQp3bVzIhPUvIoEFPItRy3FLCLvWcF/AoGAH84O6P4x5te6VZP2sONwE9i2hCJiT8jHrbvi5EAWucDifoG1zKIIPCYwsUOXQ4aucZ/5fqwzFm2mLFbSXl0ZwSJwL7nTKcWx0bS4F/f2SryWIrLmAKl8oSie3OXWWOrG/l6CLXjc5Nrj3ix9AyhmrBgvaNqhKQn2XUagrsDal6w="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIIClTCCAX0CBgGXSzwaYzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDAN0aDEwHhcNMjUwNjA3MTYzMDE5WhcNMzUwNjA3MTYzMTU5WjAOMQwwCgYDVQQDDAN0aDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8SP8IlRVmK+zGc6+bmyYTIsRUCWCpNZefbbXjh4SR9gFL/ztC0jGbJw2QhcCPgSokoSiEYcwtO8/1DeQHf7uoFNilPnsjPNF9mcTlWVd6PFa+d4+UvPjncSfjXxdWbYhPtKq/NySrJg0g0jbd6twAxcqm+6kUQCWQCwAWttOpsm57OhMBHNyioEhGMN9l2Aw0HKdoVhM25uDaCnxuQuYNu34tbC7HS9Z16bwFgVetQjsD7ZynYX3HJ1e4dlFQX1RWxCeGocxgSp+YW4lcea0PIgqvne41fX+ZMv96UL1iZk6hcA5817v3Oh6gz39nel+EOrMAtITDEFL1B2+fI7sVAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIEMt4yOaiL6mi8T6JXrA3Acybi77uyMHDqgNhPLyfxehH3iQloTNx1Z4m9mkHETFuff3ICgtputQQh8mMRHi2OmPcJX896c2Bww0fAyP5eLI0GTSaPjnQKtmfXX/5/+6/qEcYwWxQKg/34B2uGhXrVTiJah8K6JBEk8VawqhJ9J7IlBG3ZpE73s494teiMun2UVGcC5juYWOM6GjT1nviIZvxFhpwRtiAVqngC+OmOTXWYaXd1Smz4DS9fBFBZHFrncbaR10ZPefFmprbYNeylwn9W3u2mOn8I5DZHPgT9VDbgLSlhAIGbH6jJRBXrx1P1ZSjxLe6w/uEuEtRG6mJg="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "3f56a189-bac2-4176-96f9-6e1b934af7e8",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b0788034-a38b-4280-8d80-f97e4cdfce5d",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "75da1c83-49fd-4d8d-acee-db846d169ba9",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9150dfca-f758-4705-a5dc-e2eef21b0f2e",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "61c42726-0753-45cf-aaed-ea7f5b4df4ea",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "df0c5333-c7fa-4fcc-9786-81639094aa77",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5c05a14a-6856-401d-ba77-4b67744bcc49",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3006a3fd-f56f-4498-9405-b3290d74d71d",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "da6f1ca8-7d8f-4f65-816c-a8b88ac30e85",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9898b3f4-a368-42da-8de8-7d5792a8c078",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "35f3f659-9f3b-4306-9d6a-0809a4c90189",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "41902e8f-bd72-4c36-a5ff-e75d334af4c4",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f2e162d-ffd9-4dec-b19b-a0b19f59cedb",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "eecde5e9-3856-4983-8546-ee007c4b9caf",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b0295dd7-4770-4dcd-bc6c-ea1013c8d780",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b4ffe3de-00ea-463a-8d92-96fa5814add7",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6320c8e1-36c0-4b0f-a393-06bd8c7931c2",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51cc551a-0aa3-4065-889e-cfbe5b8822c9",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9b8f8e94-07b3-4961-8cdd-1f2ea6c1375b",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9443492d-50c3-4480-957d-821ba5c85051",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "50a4bb5a-94f7-4628-a45b-9840f7e3d237",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "6227b963-7ae5-4c46-bcbe-4dbf0ba7312f",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "d186b632-5ed8-4983-92bc-c1af5b7ad220",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "saml.signature.algorithm": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "26.2.5",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}